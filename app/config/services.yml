
parameters:
    fr3d_ldap.security.authentication.provider.class: AppBundle\Security\Authentication\LdapAuthenticationProvider

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']




    fr3d_ldap.security.authentication.provider:
        class: "%fr3d_ldap.security.authentication.provider.class%"
        arguments:
            - '@security.user_checker'
            - ''
            - ''
            - '@fr3d_ldap.ldap_manager'
            - '@fos_user.user_manager'
            - "%security.authentication.hide_user_not_found%"
            - "@doctrine.orm.entity_manager"
            - "@app.ldap.service"
            - '@logger'

    app.ldap.user_hydrator:
        public: true
        class: AppBundle\Ldap\UserHydrator

    app.menu_builder: '@AppBundle\Menu\MenuBuilder'
    AppBundle\Menu\MenuBuilder:
        arguments: ["@knp_menu.factory"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main } # The alias is what is used to retrieve the menu

    app.document.directory_namer:
        public: true
        class: AppBundle\Service\DirectoryNamer
        arguments: ['%kernel.root_dir%']

    app.sinatzeke:
        public: true
        class: AppBundle\Service\NotificationService
#        arguments: ["@doctrine.orm.entity_manager"]
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage"]


    app.calendar.service:
        public: true
        class: AppBundle\Service\CalendarService
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage"]

    app.eskaera.repository:
        public: true
        class: AppBundle\Repository\EskaeraRepository
        factory: ["@doctrine", "getRepository"]
        arguments: ['AppBundle:Eskaera']
        calls:
            - ["setLizentziaType", ["%type_lizentzia%"]]

    app.ldap.service:
        public: true
        class: AppBundle\Service\LdapService
        arguments:
            - '%ldap_server%'
            - '%ldap_username%'
            - '%ldap_base_dn%'
            - '%ldap_password%'

